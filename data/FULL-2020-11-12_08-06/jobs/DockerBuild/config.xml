<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.40">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.7.2"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.7.2">
      <jobProperties>
        <string>org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty</string>
      </jobProperties>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.1.3"/>
    <org.jenkinsci.plugins.workflow.job.properties.DisableConcurrentBuildsJobProperty/>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.85">
    <script>pipeline {
    options {
        disableConcurrentBuilds()
    }
    agent {
        kubernetes {
            label &apos;docker-in-docker-maven&apos;
            yaml &quot;&quot;&quot;
apiVersion: v1
kind: Pod
spec:
    containers:
    - name: docker-client
      image: docker:19.03.1
      command: [&apos;sleep&apos;, &apos;99d&apos;]
      env:
        - name: DOCKER_HOST
          value: tcp://localhost:2375
    - name: docker-daemon
      image: docker:19.03.1-dind
      env:
        - name: DOCKER_TLS_CERTDIR
          value: &quot;&quot;
      securityContext:
        privileged: true
      volumeMounts:
          - name: cache
            mountPath: /var/lib/docker
    volumes:
      - name: cache
        hostPath:
          path: /tmp
          type: Directory
&quot;&quot;&quot;
        }
    }
    stages {
        stage(&apos;Checkout&apos;) {
            steps {
                git &apos;https://github.com/jenkinsci/docker-jnlp-slave.git&apos;
            }
        }
        stage(&apos;Docker Build&apos;) {
            steps {
                container(&apos;docker-client&apos;) {
                    sh &apos;docker version &amp;&amp; DOCKER_BUILDKIT=1 docker build --progress plain -t testing .&apos;
                }
            }
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>